"""empty message

Revision ID: 6b840cfc6ea9
Revises: 
Create Date: 2024-05-19 20:49:31.821957

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6b840cfc6ea9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.drop_table('AspNetUserTokens')
    op.drop_table('Notes')
    op.drop_index('IX_AspNetUserRoles_RoleId', table_name='AspNetUserRoles')
    op.drop_table('AspNetUserRoles')
    op.drop_table('__EFMigrationsHistory')
    op.drop_index('IX_AspNetUserLogins_UserId', table_name='AspNetUserLogins')
    op.drop_table('AspNetUserLogins')
    op.drop_index('RoleNameIndex', table_name='AspNetRoles')
    op.drop_table('AspNetRoles')
    op.drop_index('IX_AspNetUserClaims_UserId', table_name='AspNetUserClaims')
    op.drop_table('AspNetUserClaims')
    op.drop_index('EmailIndex', table_name='AspNetUsers')
    op.drop_index('UserNameIndex', table_name='AspNetUsers')
    op.drop_table('AspNetUsers')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AspNetUsers',
    sa.Column('Id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('FirstName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LastName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('CreatedAt', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('UserName', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('NormalizedUserName', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('Email', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('NormalizedEmail', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('EmailConfirmed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('PasswordHash', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SecurityStamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ConcurrencyStamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PhoneNumber', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PhoneNumberConfirmed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('TwoFactorEnabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('LockoutEnd', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('LockoutEnabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('AccessFailedCount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('Id', name='PK_AspNetUsers'),
    postgresql_ignore_search_path=False
    )
    op.create_index('UserNameIndex', 'AspNetUsers', ['NormalizedUserName'], unique=True)
    op.create_index('EmailIndex', 'AspNetUsers', ['NormalizedEmail'], unique=False)
    op.create_table('AspNetUserClaims',
    sa.Column('Id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('UserId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('ClaimType', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ClaimValue', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['AspNetUsers.Id'], name='FK_AspNetUserClaims_AspNetUsers_UserId', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('Id', name='PK_AspNetUserClaims')
    )
    op.create_index('IX_AspNetUserClaims_UserId', 'AspNetUserClaims', ['UserId'], unique=False)
    op.create_table('AspNetRoles',
    sa.Column('Id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('NormalizedName', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('ConcurrencyStamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('Id', name='PK_AspNetRoles'),
    postgresql_ignore_search_path=False
    )
    op.create_index('RoleNameIndex', 'AspNetRoles', ['NormalizedName'], unique=True)
    op.create_table('AspNetUserLogins',
    sa.Column('LoginProvider', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('ProviderKey', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('ProviderDisplayName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('UserId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['UserId'], ['AspNetUsers.Id'], name='FK_AspNetUserLogins_AspNetUsers_UserId', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('LoginProvider', 'ProviderKey', name='PK_AspNetUserLogins')
    )
    op.create_index('IX_AspNetUserLogins_UserId', 'AspNetUserLogins', ['UserId'], unique=False)
    op.create_table('__EFMigrationsHistory',
    sa.Column('MigrationId', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('ProductVersion', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('MigrationId', name='PK___EFMigrationsHistory')
    )
    op.create_table('AspNetUserRoles',
    sa.Column('UserId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('RoleId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['RoleId'], ['AspNetRoles.Id'], name='FK_AspNetUserRoles_AspNetRoles_RoleId', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['AspNetUsers.Id'], name='FK_AspNetUserRoles_AspNetUsers_UserId', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('UserId', 'RoleId', name='PK_AspNetUserRoles')
    )
    op.create_index('IX_AspNetUserRoles_RoleId', 'AspNetUserRoles', ['RoleId'], unique=False)
    op.create_table('Notes',
    sa.Column('Id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('Title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('Id', name='PK_Notes')
    )
    op.create_table('AspNetUserTokens',
    sa.Column('UserId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('LoginProvider', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('Value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['AspNetUsers.Id'], name='FK_AspNetUserTokens_AspNetUsers_UserId', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('UserId', 'LoginProvider', 'Name', name='PK_AspNetUserTokens')
    )
    op.drop_table('users')
    # ### end Alembic commands ###
